(
    out_code: "@binding(1) @group(0) var<storage, read_write> outputBuffer_0 : array<f32>;\n\nstruct GlobalParams_std140_0\n{\n    @align(16) seed_0 : f32,\n};\n\n@binding(0) @group(0) var<uniform> globalParams_0 : GlobalParams_std140_0;\nfn tauStep_0( z_0 : u32,  s1_0 : u32,  s2_0 : u32,  s3_0 : u32,  M_0 : u32) -> u32\n{\n    return (((((z_0 & (M_0))) << (s3_0))) ^ (((((((z_0 << (s1_0))) ^ (z_0))) >> (s2_0)))));\n}\n\nfn seedPerThread_0( idx_0 : u32) -> u32\n{\n    return (idx_0 + u32(globalParams_0.seed_0 * 1.0e+06f)) * u32(1099087573);\n}\n\n@compute\n@workgroup_size(64, 1, 1)\nfn computeMain(@builtin(global_invocation_id) dispatchThreadId_0 : vec3<u32>)\n{\n    var idx_1 : u32 = dispatchThreadId_0.xy.x;\n    var _seed_0 : u32 = seedPerThread_0(idx_1);\n    var r0_0 : u32 = ((((((tauStep_0(_seed_0, u32(13), u32(19), u32(12), u32(429496729))) ^ ((tauStep_0(_seed_0, u32(2), u32(25), u32(4), u32(4294967288)))))) ^ ((tauStep_0(_seed_0, u32(3), u32(11), u32(17), u32(429496280)))))) ^ ((u32(1664525) * _seed_0 + u32(1013904223))));\n    var r1_0 : u32 = ((((((tauStep_0(r0_0, u32(13), u32(19), u32(12), u32(429496729))) ^ ((tauStep_0(r0_0, u32(2), u32(25), u32(4), u32(4294967288)))))) ^ ((tauStep_0(r0_0, u32(3), u32(11), u32(17), u32(429496280)))))) ^ ((u32(1664525) * r0_0 + u32(1013904223))));\n    var r2_0 : u32 = ((((((tauStep_0(r1_0, u32(13), u32(19), u32(12), u32(429496729))) ^ ((tauStep_0(r1_0, u32(2), u32(25), u32(4), u32(4294967288)))))) ^ ((tauStep_0(r1_0, u32(3), u32(11), u32(17), u32(429496280)))))) ^ ((u32(1664525) * r1_0 + u32(1013904223))));\n    outputBuffer_0[idx_1] = f32(((((((tauStep_0(r2_0, u32(13), u32(19), u32(12), u32(429496729))) ^ ((tauStep_0(r2_0, u32(2), u32(25), u32(4), u32(4294967288)))))) ^ ((tauStep_0(r2_0, u32(3), u32(11), u32(17), u32(429496280)))))) ^ ((u32(1664525) * r2_0 + u32(1013904223))))) * 2.32830643653869629e-10f;\n    return;\n}\n\n",
    entry_group_sizes: {
        "computeMain": (64, 1, 1),
    },
    bindings: {
        "outputBuffer": (
            binding: 1,
            visibility: "COMPUTE",
            ty: Buffer(
                ty: Storage(
                    read_only: false,
                ),
                has_dynamic_offset: false,
                min_binding_size: None,
            ),
            count: None,
        ),
        "uniformInput": (
            binding: 0,
            visibility: "COMPUTE",
            ty: Buffer(
                ty: Uniform,
                has_dynamic_offset: false,
                min_binding_size: None,
            ),
            count: None,
        ),
    },
    resource_commands: [],
    call_commands: [],
    hashed_strings: {},
    uniform_size: 16,
    uniform_controllers: [],
)